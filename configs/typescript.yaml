# Rules: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin#supported-rules
# Version: 5.22.0
# Last updated: 2022-05-07

rules:
  "@typescript-eslint/adjacent-overload-signatures":
    - error
  "@typescript-eslint/array-type":
    - error
    - default: array-simple
      readonly: array-simple
  "@typescript-eslint/await-thenable":
    - error
  "@typescript-eslint/ban-ts-comment":
    - error
    - ts-expect-error: false
      ts-ignore: false
      ts-nocheck: false
      ts-check: false
  "@typescript-eslint/ban-tslint-comment":
    - error
  "@typescript-eslint/ban-types":
    - error
  "@typescript-eslint/class-literal-property-style":
    - error
    - fields
  "@typescript-eslint/consistent-indexed-object-style":
    - error
    - record
  "@typescript-eslint/consistent-type-assertions":
    - error
    - assertionStyle: as
      objectLiteralTypeAssertions: never
  "@typescript-eslint/consistent-type-definitions":
    - error
    - interface
  "@typescript-eslint/consistent-type-exports":
    - error
  "@typescript-eslint/consistent-type-imports":
    - error
    - prefer: type-imports
      disallowTypeAnnotations: true
  "@typescript-eslint/explicit-function-return-type":
    - error
    - allowExpressions: false
      allowTypedFunctionExpressions: true
      allowHigherOrderFunctions: false
      allowDirectConstAssertionInArrowFunctions: false
      allowConciseArrowFunctionExpressionsStartingWithVoid: false
  "@typescript-eslint/explicit-member-accessibility":
    - error
    - accessibility: explicit
  "@typescript-eslint/explicit-module-boundary-types":
    - error
    - allowArgumentsExplicitlyTypedAsAny: false
      allowDirectConstAssertionInArrowFunctions: false
      allowHigherOrderFunctions: false
      allowTypedFunctionExpressions: true
  "@typescript-eslint/member-delimiter-style":
    - error
    - multiline:
        delimiter: semi
        requireLast: true
      singleline:
        delimiter: semi
        requireLast: true
      multilineDetection: brackets
  "@typescript-eslint/member-ordering":
    - error
  "@typescript-eslint/method-signature-style":
    - error
    - property
  "@typescript-eslint/naming-convention":
    - error
    - selector: default
      format:
        - camelCase
      leadingUnderscore: allow
      trailingUnderscore: forbid
    - selector: variableLike
      format:
        - camelCase
    - selector: memberLike
      format:
        - camelCase
    - selector: typeLike
      format:
        - PascalCase
    - selector: variableLike
      modifiers:
        - unused
      format: null
    - selector: variable
      modifiers:
        - const
        - global
      format:
        - UPPER_CASE
        - PascalCase
    - selector: variable
      modifiers:
        - const
        - global
      types:
        - function
      format:
        - camelCase
        - PascalCase
    - selector: enumMember
      format:
        - UPPER_CASE
    - selector: memberLike
      modifiers:
        - private
      format:
        - camelCase
      leadingUnderscore: require
    - selector: memberLike
      modifiers:
        - protected
      format:
        - camelCase
      leadingUnderscore: require
    - selector:
        - variable
        - parameter
      types:
        - boolean
      format:
        - PascalCase
      prefix:
        - is
        - should
        - has
        - can
        - did
        - will
    - selector: interface
      format:
        - PascalCase
      custom:
        regex: ^I[A-Z]
        match: false
    - selector: typeParameter
      format:
        - PascalCase
      prefix:
        - T
    - selector: variable
      modifiers:
        - destructured
      format: null
  "@typescript-eslint/no-base-to-string":
    - error
  "@typescript-eslint/no-confusing-non-null-assertion":
    - error
  "@typescript-eslint/no-confusing-void-expression":
    - error
    - ignoreArrowShorthand: false
      ignoreVoidOperator: false
  "@typescript-eslint/no-duplicate-enum-values":
    - error
  "@typescript-eslint/no-dynamic-delete":
    - error
  "@typescript-eslint/no-empty-interface":
    - error
    - allowSingleExtends: false
  "@typescript-eslint/no-explicit-any":
    - error
    - fixToUnknown: true
      ignoreRestArgs: false
  "@typescript-eslint/no-extra-non-null-assertion":
    - error
  "@typescript-eslint/no-extraneous-class":
    - error
    - allowConstructorOnly: false
      allowEmpty: false
      allowStaticOnly: false
      allowWithDecorator: false
  "@typescript-eslint/no-floating-promises":
    - error
    - ignoreVoid: false
      ignoreIIFE: false
  "@typescript-eslint/no-for-in-array":
    - error
  "@typescript-eslint/no-implicit-any-catch":
    - error
    - allowExplicitAny: false
  "@typescript-eslint/no-inferrable-types":
    - error
    - ignoreParameters: true
      ignoreProperties: true
  "@typescript-eslint/no-invalid-void-type":
    - error
    - allowInGenericTypeArguments: true
      allowAsThisParameter: true
  "@typescript-eslint/no-meaningless-void-operator":
    - error
    - checkNever: true
  "@typescript-eslint/no-misused-new":
    - error
  "@typescript-eslint/no-misused-promises":
    - error
    - checksConditionals: true
      checksVoidReturn: true
  "@typescript-eslint/no-namespace":
    - error
    - allowDeclarations: false
      allowDefinitionFiles: false
  "@typescript-eslint/no-non-null-asserted-nullish-coalescing":
    - error
  "@typescript-eslint/no-non-null-asserted-optional-chain":
    - error
  "@typescript-eslint/no-non-null-assertion":
    - error
  "@typescript-eslint/no-redundant-type-constituents":
    - error
  "@typescript-eslint/no-require-imports":
    - error
  "@typescript-eslint/no-this-alias":
    - error
    - allowDestructuring: false
      allowedNames:
        - that
  "@typescript-eslint/no-type-alias":
    - off
  "@typescript-eslint/no-unnecessary-boolean-literal-compare":
    - error
    - allowComparingNullableBooleansToTrue: true
      allowComparingNullableBooleansToFalse: true
  "@typescript-eslint/no-unnecessary-condition":
    - error
    - allowConstantLoopConditions: false
  "@typescript-eslint/no-unnecessary-qualifier":
    - error
  "@typescript-eslint/no-unnecessary-type-arguments":
    - error
  "@typescript-eslint/no-unnecessary-type-assertion":
    - error
  "@typescript-eslint/no-unnecessary-type-constraint":
    - error
  "@typescript-eslint/no-unsafe-argument":
    - error
  "@typescript-eslint/no-unsafe-assignment":
    - error
  "@typescript-eslint/no-unsafe-call":
    - error
  "@typescript-eslint/no-unsafe-member-access":
    - error
  "@typescript-eslint/no-unsafe-return":
    - error
  "@typescript-eslint/no-useless-empty-export":
    - error
  "@typescript-eslint/no-var-requires":
    - error
  "@typescript-eslint/non-nullable-type-assertion-style":
    - error
  "@typescript-eslint/parameter-properties":
    - error
  "@typescript-eslint/prefer-as-const":
    - error
  "@typescript-eslint/prefer-enum-initializers":
    - error
  "@typescript-eslint/prefer-for-of":
    - error
  "@typescript-eslint/prefer-function-type":
    - error
  "@typescript-eslint/prefer-includes":
    - error
  "@typescript-eslint/prefer-literal-enum-member":
    - error
    - allowBitwiseExpressions: false
  "@typescript-eslint/prefer-namespace-keyword":
    - error
  "@typescript-eslint/prefer-nullish-coalescing":
    - error
    - ignoreConditionalTests: true
      ignoreMixedLogicalExpressions: true
  "@typescript-eslint/prefer-optional-chain":
    - error
  "@typescript-eslint/prefer-readonly":
    - error
    - onlyInlineLambdas: false
  "@typescript-eslint/prefer-readonly-parameter-types":
    - error
    - checkParameterProperties: true
      ignoreInferredTypes: false
      treatMethodsAsReadonly: false
  "@typescript-eslint/prefer-reduce-type-parameter":
    - error
  "@typescript-eslint/prefer-regexp-exec":
    - error
  "@typescript-eslint/prefer-return-this-type":
    - error
  "@typescript-eslint/prefer-string-starts-ends-with":
    - error
  "@typescript-eslint/prefer-ts-expect-error":
    - error
  "@typescript-eslint/promise-function-async":
    - error
    - allowAny: true
      checkArrowFunctions: true
      checkFunctionDeclarations: true
      checkFunctionExpressions: true
      checkMethodDeclarations: true
  "@typescript-eslint/require-array-sort-compare":
    - error
    - ignoreStringArrays: true
  "@typescript-eslint/restrict-plus-operands":
    - error
    - checkCompoundAssignments: true
  "@typescript-eslint/restrict-template-expressions":
    - off
  "@typescript-eslint/sort-type-union-intersection-members":
    - error
  "@typescript-eslint/strict-boolean-expressions":
    - error
    - allowString: false
      allowNumber: false
      allowNullableObject: false
      allowNullableBoolean: false
      allowNullableString: false
      allowNullableNumber: false
      allowAny: false
  "@typescript-eslint/switch-exhaustiveness-check":
    - error
  "@typescript-eslint/triple-slash-reference":
    - error
  "@typescript-eslint/type-annotation-spacing":
    - error
  "@typescript-eslint/typedef":
    - off
  "@typescript-eslint/unbound-method":
    - error
    - ignoreStatic: true
  "@typescript-eslint/unified-signatures":
    - error

  # Extension Rules
  "@typescript-eslint/brace-style":
    - error
    - 1tbs
    - allowSingleLine: true
  comma-dangle:
    - off
  "@typescript-eslint/comma-dangle":
    - error
    - always-multiline
  comma-spacing:
    - off
  "@typescript-eslint/comma-spacing":
    - error
    - before: false
      after: true
  default-param-last:
    - off
  "@typescript-eslint/default-param-last":
    - error
  dot-notation:
    - off
  "@typescript-eslint/dot-notation":
    - error
    - allowKeywords: false
      allowPrivateClassPropertyAccess: false
      allowProtectedClassPropertyAccess: false
      allowIndexSignaturePropertyAccess: true
  func-call-spacing:
    - off
  "@typescript-eslint/func-call-spacing":
    - error
    - never
  indent:
    - off
  "@typescript-eslint/indent":
    - error
    - 2
  init-declarations:
    - off
  "@typescript-eslint/init-declarations":
    - off
  keyword-spacing:
    - off
  "@typescript-eslint/keyword-spacing":
    - error
    - before: true
      after: true
  lines-between-class-members:
    - off
  "@typescript-eslint/lines-between-class-members":
    - error
    - always
    - exceptAfterSingleLine: true
      exceptAfterOverload: true
  no-array-constructor:
    - off
  "@typescript-eslint/no-array-constructor":
    - error
  no-dupe-class-members:
    - off
  "@typescript-eslint/no-dupe-class-members":
    - error
  no-duplicate-imports:
    - off
  "@typescript-eslint/no-duplicate-imports":
    - error
    - includeExports: false
  no-empty-function:
    - off
  "@typescript-eslint/no-empty-function":
    - error
  no-extra-parens:
    - off
  "@typescript-eslint/no-extra-parens":
    - error
    - all
  no-extra-semi:
    - off
  "@typescript-eslint/no-extra-semi":
    - error
  no-implied-eval:
    - off
  "@typescript-eslint/no-implied-eval":
    - error
  no-invalid-this:
    - off
  "@typescript-eslint/no-invalid-this":
    - error
    - capIsConstructor: false
  no-loop-func:
    - off
  "@typescript-eslint/no-loop-func":
    - error
  no-loss-of-precision:
    - off
  "@typescript-eslint/no-loss-of-precision":
    - error
  no-magic-numbers:
    - off
  "@typescript-eslint/no-magic-numbers":
    - off
  no-redeclare:
    - off
  "@typescript-eslint/no-redeclare":
    - error
    - builtinGlobals: true
      ignoreDeclarationMerge: true
  no-shadow:
    - off
  "@typescript-eslint/no-shadow":
    - error
    - builtinGlobals: true
      hoist: functions
      ignoreTypeValueShadow: true
      ignoreFunctionTypeParameterNameValueShadow: true
  no-throw-literal:
    - off
  "@typescript-eslint/no-throw-literal":
    - error
  no-unused-expressions:
    - off
  "@typescript-eslint/no-unused-expressions":
    - error
    - allowShortCircuit: false
      allowTernary: false
      allowTaggedTemplates: false
      enforceForJSX: true
  no-unused-vars:
    - off
  "@typescript-eslint/no-unused-vars":
    - warn
    - vars: all
      args: all
      ignoreRestSiblings: true
      caughtErrors: all
  no-use-before-define:
    - off
  "@typescript-eslint/no-use-before-define":
    - error
    - functions: true
      classes: true
      variables: true
      enums: true
      typedefs: true
      ignoreTypeReferences: false
  no-useless-constructor:
    - off
  "@typescript-eslint/no-useless-constructor":
    - error
  object-curly-spacing:
    - off
  "@typescript-eslint/object-curly-spacing":
    - error
    - always
  padding-line-between-statements:
    - off
  "@typescript-eslint/padding-line-between-statements":
    - off
  quotes:
    - off
  "@typescript-eslint/quotes":
    - error
    - double
    - avoidEscape: true
      allowTemplateLiterals: true
  require-await:
    - off
  "@typescript-eslint/require-await":
    - error
  no-return-await:
    - off
  "@typescript-eslint/return-await":
    - warn
    - always
  space-before-blocks:
    - off
  "@typescript-eslint/space-before-blocks":
    - error
  semi:
    - off
  "@typescript-eslint/semi":
    - error
    - always
    - omitLastInOneLineBlock: false
  space-before-function-paren:
    - off
  "@typescript-eslint/space-before-function-paren":
    - error
    - always
  space-infix-ops:
    - off
  "@typescript-eslint/space-infix-ops":
    - error
